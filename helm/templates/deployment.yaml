apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "cdp-private-hdfs-sp.name" . }}
{{- include "cdp-private-hdfs-sp.labels" . | nindent 4 }}
  name: {{ template "cdp-private-hdfs-sp.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cdp-private-hdfs-sp.name" . }}
  template:
    metadata:
      annotations:
      labels:
        app: {{ template "cdp-private-hdfs-sp.name" . }}
{{- include "cdp-private-hdfs-sp.labels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end}}
      volumes:
        - name: keytab-volume
          secret:
            secretName: witboost-addons-secrets
            items:
              - key: cdp-private-hdfs-keytab
                path: keytab
        - name: config
          configMap:
            name: {{ template "cdp-private-hdfs-sp.fullname" . }}-config
            defaultMode: 420
        - name: shared-volume
          emptyDir: {}
        {{- if .Values.customRootCA.enabled }}
        - name: custom-ca-volume
          secret:
            secretName: witboost-addons-secrets
            items:
              - key: cdp-private-hdfs-custom-ca
                path: custom_root_ca.crt
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OTEL_JAVAAGENT_ENABLED
              value: {{ quote .Values.otel.enabled }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.otel.collectorUrl }}
            - name: OTEL_METRICS_EXPORTER
              value: {{ .Values.otel.metricExporter }}
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.otel.serviceName }}
            - name: OTEL_TRACES_EXPORTER
              value: {{ .Values.otel.tracesExporter }}
            - name: SPRING_CONFIG_LOCATION
              value: file:/opt/docker/etc/configs/application.yml
            - name: LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: LDAP_BIND_PASSWORD
            - name: RANGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: witboost-addons-secrets
                  key: RANGER_PASSWORD
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: shared-volume
              mountPath: /opt/docker/etc/security/cdp/private/hdfs/keytab
              subPath: keytab
              readOnly: true
            - name: config
              mountPath: /opt/docker/etc/configs
            {{- if .Values.customRootCA.enabled }}
            - name: shared-volume
              mountPath: /opt/java/openjdk/lib/security/cacerts
              subPath: cacerts
              readOnly: true
            {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-init-keytab
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          command: ['sh', '-c']
          args:
            - |
              cat /security/keytab | base64 -d > /work/keytab
          volumeMounts:
            - name: keytab-volume
              mountPath: /security
              readOnly: true
            - name: shared-volume
              mountPath: /work
        {{- if .Values.customRootCA.enabled }}
        - name: {{ .Chart.Name }}-init-custom-ca
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          command: ['sh', '-c']
          args:
            - |
              cp $JAVA_HOME/lib/security/cacerts /work/cacerts
              keytool -import -noprompt -alias customRootCA -keystore /work/cacerts -file /certificates/custom_root_ca.crt -storepass changeit
          volumeMounts:
            - name: custom-ca-volume
              mountPath: /certificates
              readOnly: true
            - name: shared-volume
              mountPath: /work
        {{- end }}
